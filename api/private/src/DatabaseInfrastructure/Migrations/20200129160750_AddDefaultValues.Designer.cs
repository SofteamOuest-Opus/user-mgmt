// <auto-generated />
using System;
using DatabaseInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DatabaseInfrastructure.Migrations
{
    [DbContext(typeof(UserMgmtContext))]
    [Migration("20200129160750_AddDefaultValues")]
    partial class AddDefaultValues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DatabaseInfrastructure.Entities.EmployeeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("HumanResourceManagerId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OccupationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uuid");

                    b.Property<string>("PhotoUri")
                        .HasColumnType("text");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HumanResourceManagerId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("OccupationId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DatabaseInfrastructure.Entities.OccupationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Occupations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03b9c8f8-2ecb-294f-7e4b-96d4b9c1e98a"),
                            Name = "Employee"
                        },
                        new
                        {
                            Id = new Guid("3cbe94ae-32d5-4ace-0258-84819eb08c98"),
                            Name = "Manager"
                        },
                        new
                        {
                            Id = new Guid("45f3141c-650c-b5c2-121c-9764e8c78063"),
                            Name = "Human resource manager"
                        },
                        new
                        {
                            Id = new Guid("35484dd9-6eae-39c1-1bf6-bfc2528aaa02"),
                            Name = "Top management"
                        });
                });

            modelBuilder.Entity("DatabaseInfrastructure.Entities.OfficeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f35ba62-b5a6-ea8b-6413-14e7a4635cf6"),
                            Name = "Nantes"
                        },
                        new
                        {
                            Id = new Guid("c1cf125f-0664-56d1-d3c4-ed54f00556f9"),
                            Name = "Rennes"
                        });
                });

            modelBuilder.Entity("DatabaseInfrastructure.Entities.StatusEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07debdda-ca9b-65ac-b939-992610420dfc"),
                            Name = "Internship"
                        },
                        new
                        {
                            Id = new Guid("715ffd55-b3c7-ff74-fa93-588a507c2aaa"),
                            Name = "Subcontractor"
                        },
                        new
                        {
                            Id = new Guid("9120b0e2-928b-feae-d5e6-eb1c3b944984"),
                            Name = "Freelancer"
                        });
                });

            modelBuilder.Entity("DatabaseInfrastructure.Entities.EmployeeEntity", b =>
                {
                    b.HasOne("DatabaseInfrastructure.Entities.EmployeeEntity", "HumanResourceManager")
                        .WithMany()
                        .HasForeignKey("HumanResourceManagerId");

                    b.HasOne("DatabaseInfrastructure.Entities.EmployeeEntity", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("DatabaseInfrastructure.Entities.OccupationEntity", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId");

                    b.HasOne("DatabaseInfrastructure.Entities.OfficeEntity", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");

                    b.HasOne("DatabaseInfrastructure.Entities.StatusEntity", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });
#pragma warning restore 612, 618
        }
    }
}
